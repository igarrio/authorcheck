import logging

from aiogram import types
from aiogram.filters import CommandObject
from aiogram.exceptions import TelegramNetworkError
from source.database.requests import author_check, get_random_author


async def handle_send_check_result(message: types.Message, command: CommandObject):
    log = logging.getLogger('request')
    log.info(f'Check request: {command.args}\nBy: {message.from_user.url}')

    try:
        if command.args is None:
            await message.reply('‚ùå –ö–æ–º–∞–Ω–¥—É –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –û—Å—å –ø—Ä–∏–∫–ª–∞–¥:\n\n<code>/check nickname_or_link</code>')
        elif len(command.args) < 3:
            await message.reply('‚ùå –ö–æ–º–∞–Ω–¥—É –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n\n–ó–¥–∞—î—Ç—å—Å—è –≤–∞—à –∑–∞–ø–∏—Ç –º—ñ—Å—Ç–∏—Ç—å –º–µ–Ω—à–µ –Ω—ñ–∂ 3 –ª—ñ—Ç–µ—Ä–∏')
        else:
            search = await author_check(command.args)
            if search:
                if isinstance(search, list):
                    formatted_results = "\n".join(
                        f"{i + 1}. <b>{result['author']}</b>\n–ü—Ä–∏—á–∏–Ω–∞: <u>{result['description']}</u>"
                        for i, result in enumerate(search)
                    )
                else:
                    formatted_results = "\n".join(
                        f"1. <b>{search['author']}</b>\n–ü—Ä–∏—á–∏–Ω–∞: <u>{search['description']}</u>"
                    )
                good_author = await get_random_author()
                final_message = (f"üôÑ –û–π –π–æ–π... –ó–¥–∞—î—Ç—å—Å—è —è –¥–µ—â–æ –∑–Ω–∞–π—à–æ–≤:\n\n{formatted_results}\n\n"
                                 f"–¢–∞–∫–æ–∂ —Ä–∞–¥–∏–º–æ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —á—É–¥–æ–≤–∏–º –∞–≤—Ç–æ—Ä–æ–º:\n"
                                 f'üå∫ <a href="{good_author["link"]}">{good_author["author"]}</a> üå∫')
                await message.reply(final_message)
            else:
                await message.reply('üòÆ‚Äçüí® –ù–∞ —â–∞—Å—Ç—è - –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!\n–ê–ª–µ —Ä–∞–¥–∏–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ –∞–≤—Ç–æ—Ä—ñ–≤')
    except TelegramNetworkError:
        await message.reply('ü•Ä ü•Ä ü•Ä –í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ —Å–µ—Ä–≤–µ—Ä—É Telegram:\n\nTelegramNetworkError: HTTP Client says - Request timeout error')
